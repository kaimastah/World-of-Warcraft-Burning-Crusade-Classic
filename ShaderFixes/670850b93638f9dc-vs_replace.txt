// name plates
cbuffer cb1 : register(b1)
{
  float4 cb1[4];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float3 v0 : POSITION0,
  float4 v1 : COLOR0,
  float2 v2 : TEXCOORD0,
  out float4 o0 : SV_POSITION0,
  out float4 o1 : COLOR0,
  out float4 o2 : COLOR1,
  out float2 o3 : TEXCOORD0)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;
  float4 stereo = StereoParams.Load(0);
  float4 iniParams = IniParams.Load(0);

  r0.xyz = v0.xyz;
  r0.w = 1;
  o0.x = dot(cb1[0].xyzw, r0.xyzw);
  o0.y = dot(cb1[1].xyzw, r0.xyzw);
  o0.z = dot(cb1[2].xyzw, r0.xyzw);
  o0.w = dot(cb1[3].xyzw, r0.xyzw);
  o1.xyzw = v1.xyzw;
  r0.x = cmp(v2.x < 0.5);
  o2.xyzw = r0.xxxx ? float4(0,0,0,1) : float4(0,1,0,0);
  r0.x = v2.x + v2.x;
  r0.y = cmp(r0.x >= -r0.x);
  r0.x = frac(abs(r0.x));
  o3.x = r0.y ? r0.x : -r0.x;
  o3.y = v2.y;

  if (iniParams.x != 0)
  {
  o0.x+=stereo.x * (1 - stereo.y * iniParams.x);
  }

  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Aug 28 01:39:14 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// COLOR                    1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_temps 1
mov r0.xyz, v0.xyzx
mov r0.w, l(1.000000)
dp4 o0.x, cb1[0].xyzw, r0.xyzw
dp4 o0.y, cb1[1].xyzw, r0.xyzw
dp4 o0.z, cb1[2].xyzw, r0.xyzw
dp4 o0.w, cb1[3].xyzw, r0.xyzw
mov o1.xyzw, v1.xyzw
lt r0.x, v2.x, l(0.500000)
movc o2.xyzw, r0.xxxx, l(0,0,0,1.000000), l(0,1.000000,0,0)
add r0.x, v2.x, v2.x
ge r0.y, r0.x, -r0.x
frc r0.x, |r0.x|
movc o3.x, r0.y, r0.x, -r0.x
mov o3.y, v2.y
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
